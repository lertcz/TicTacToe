{"version":3,"sources":["../node_modules/peerjs/dist sync","pages/PeerInfo/PeerInfo.jsx","pages/TitleScreen/TitleScreen.jsx","pages/WaitingRoom/WaitingRoom.jsx","components/Square/Square.jsx","components/Board/Board.jsx","pages/Game/LocalGame.jsx","pages/Game/OnlineGame.jsx","pages/Rematch/Rematch.jsx","pages/Router.jsx","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","PeerContext","createContext","PeerProvider","children","navigate","useNavigate","useState","conn","setConn","Peer","peer","shape","setShape","onTurn","setOnTurn","Array","fill","squares","setSquares","connection","joinPeer","connect","on","recievedConnection","useEffect","data","console","log","err","Provider","value","TitleScreen","contextProps","useContext","idValue","setIdValue","joinGame","a","preventDefault","alert","className","onClick","onSubmit","onChange","target","placeholder","size","required","WaitingRoom","text","Square","props","handleClick","index","Board","map","square","i","LGame","Xturn","setXturn","winner","lines","length","b","c","calculateWinner","includes","localSquares","OGame","update","forceUpdate","send","Rematch","useParams","WhoWon","Router","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aad33849.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 19;","import React, { useState, useEffect, createContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Peer from \"peerjs\";\r\n\r\nexport const PeerContext = createContext()\r\n\r\nconst PeerProvider = ({ children }) => {\r\n    const navigate = useNavigate();\r\n\r\n    const [conn, setConn] = useState(null)\r\n    const [peer] = useState(new Peer())\r\n\r\n    const [shape, setShape] = useState(null)\r\n    const [onTurn, setOnTurn] = useState(false)\r\n    const [squares, setSquares] = useState(Array(9).fill(null))\r\n\r\n    let connection = {\r\n        peer: peer,\r\n        conn: conn,\r\n\r\n        shape: shape,\r\n\r\n        onTurn: onTurn,\r\n        setOnTurn: setOnTurn,\r\n\r\n        squares: squares,\r\n        setSquares: setSquares,\r\n        joinPeer: updateConn\r\n    }\r\n\r\n    function updateConn(id){\r\n        setShape(\"O\")\r\n        setConn(peer.connect(id))\r\n    }\r\n\r\n    peer.on('connection', function(recievedConnection) {\r\n        setShape(\"X\")\r\n        setOnTurn(true)\r\n        setConn(recievedConnection)\r\n        navigate(\"/TicTacToe/onlineGame\")\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(connection.conn){\r\n            conn.on('open', function() {\r\n                conn.on('data', function(data) {\r\n                    //console.log('Received data:', data);\r\n                    if (typeof(data) == \"object\") {\r\n                        setSquares(data)\r\n                        setOnTurn(true)\r\n                    }\r\n                    \r\n                });\r\n          \r\n                conn.on('close', () => {\r\n                    console.log(\"Connection Closed\")\r\n                });\r\n          \r\n                conn.on('error', err => {\r\n                    console.log(\"ERROR: \", err);\r\n                });\r\n            });\r\n            \r\n            //can add more\r\n        }\r\n      });\r\n\r\n    return (\r\n        <PeerContext.Provider value={connection}>\r\n            {children}\r\n        </PeerContext.Provider>\r\n    )\r\n}\r\n\r\nexport default PeerProvider","import React, { useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../index.css\";\r\nimport { PeerContext } from \"../PeerInfo/PeerInfo\";\r\n\r\nfunction TitleScreen() {\r\n    const navigate = useNavigate();\r\n    const contextProps = useContext(PeerContext)\r\n\r\n    const [idValue, setIdValue] = useState('')\r\n\r\n    function createGame() {\r\n        navigate(\"/TicTacToe/wait\")\r\n    }\r\n\r\n    const joinGame = async(e) => {\r\n        if(idValue !== \"\") {\r\n            if(idValue !== contextProps.peer.id){\r\n                e.preventDefault();\r\n                \r\n                contextProps.joinPeer(idValue)\r\n\r\n                navigate(\"/TicTacToe/onlineGame\")\r\n        \r\n            }\r\n            else {\r\n                alert(\"Can't connect to yourself\")\r\n            }\r\n        }\r\n        else {\r\n            alert(\"Can't be empty\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"centerDivElementCol min-h-screen\">\r\n            <div>\r\n                <p className=\"text-5xl\">TicTacToe</p>\r\n            </div>\r\n            <div>\r\n                <button className=\"button\" onClick={createGame}>Create Game</button>\r\n            </div>\r\n            <form className=\"centerDivElement\" onSubmit={joinGame}>\r\n                <div>\r\n                    <input className=\"textField\" value={idValue} onChange={(e) => setIdValue(e.target.value)}\r\n                    id=\"roomID\" placeholder=\"Room ID\" size=\"38\" required></input>\r\n                </div>\r\n                <div>\r\n                    <button className=\"button\" onClick={joinGame}>Join Game</button>\r\n                </div>\r\n            </form>\r\n            {/*<button className=\"button\" onClick={() => console.log(contextProps.peer.id)}>Pear ID</button>\r\n            <button className=\"button\" onClick={() => console.log(\"conn: \", contextProps.conn)}>Conn ID</button>\r\n            <button className=\"button\" onClick={() => {\r\n                contextProps.conn.send(\"hello\")\r\n            }}>Send</button>*/}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitleScreen","import React, { useContext } from \"react\";\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../index.css\";\r\n\r\nimport { PeerContext } from \"..//PeerInfo/PeerInfo\";\r\n\r\n\r\nfunction WaitingRoom() {\r\n    const navigate = useNavigate();\r\n    const contextProps = useContext(PeerContext)\r\n    \r\n    return (\r\n        <div className=\"centerDivElementCol min-h-screen\">\r\n            <div>\r\n                <p className=\"text-5xl\">Waiting for the opponent ...</p>\r\n            </div>\r\n            <div>\r\n                <p className=\"IDtext\">{\"ID: \" + contextProps.peer.id}</p>\r\n            </div>\r\n            <div>\r\n                <CopyToClipboard text={contextProps.peer.id}>\r\n                    <button className=\"button\">COPY</button>\r\n                </CopyToClipboard>\r\n            </div>\r\n            <div>\r\n                <button className=\"button\" onClick={() => navigate(\"/TicTacToe/localGame\")}>Local Game</button>\r\n            </div>\r\n            <div>\r\n                <button className=\"button\" onClick={() => navigate(\"/TicTacToe\")}>Back</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WaitingRoom","import React from \"react\";\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className=\"squareDim\" onClick={() => props.handleClick(props.index)}>\r\n            {props.value}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Square","import Square from \"../Square/Square\"\r\n\r\nfunction Board(props) {\r\n    //squares[1] = \"X\"\r\n    return (\r\n        props.squares.map((square, i) => <Square key={i} index={i} value={square} handleClick={props.handleClick}></Square>) // onClick={() => props.onClick(i)}\r\n    )\r\n}\r\n\r\nexport default Board","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Board from \"../../components/Board/Board\"\r\nimport \"../../index.css\";\r\n\r\nfunction LGame() {\r\n  const navigate = useNavigate();\r\n\r\n  const [Xturn, setXturn] = useState(true)\r\n  const [squares, setSquares] = useState(Array(9).fill(null))\r\n  const winner = calculateWinner(squares)\r\n\r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function handleClick(i) {\r\n    if(winner) {\r\n      return // title screen TODO\r\n    }\r\n    else if(squares[i] == null) {\r\n      let localSquares = squares\r\n      localSquares[i] = Xturn ? \"X\" : \"O\"\r\n      setSquares(localSquares)\r\n      setXturn(!Xturn)\r\n\r\n    }\r\n  }\r\n\r\n  function nextTurn() {\r\n    if(winner) {\r\n      navigate(\"/TicTacToe/game/rematch/\" + winner);\r\n    }\r\n    else if(!squares.includes(null)) {\r\n      navigate(\"/TicTacToe/game/rematch/D\")\r\n    }\r\n    return Xturn ? \"X's turn\" : \"O's turn\"\r\n  }\r\n\r\n  return (\r\n    <div className=\"setScreenSize\">\r\n      <div className=\"centerDivElement text-5xl\">\r\n        <p>{nextTurn()}</p>\r\n      </div>\r\n\r\n      <div className=\"centerDivElement boardDiv\">\r\n        <div className=\"board grid grid-rows-3 grid-cols-3\">\r\n          <Board squares={squares} handleClick={handleClick} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LGame;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Board from \"../../components/Board/Board\"\r\nimport \"../../index.css\";\r\n\r\nimport { PeerContext } from \"../PeerInfo/PeerInfo\";\r\n\r\nfunction OGame() {\r\n  const navigate = useNavigate();\r\n  const contextProps = useContext(PeerContext)\r\n\r\n  const [update, forceUpdate] = useState(0)\r\n\r\n  //const [squares, setSquares] = useState(Array(9).fill(null))\r\n  const winner = calculateWinner(contextProps.squares)\r\n\r\n\r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function handleClick(i) {\r\n    \r\n\r\n    if(contextProps.squares[i] == null && contextProps.onTurn) {\r\n        let localSquares = contextProps.squares\r\n        localSquares[i] = contextProps.shape\r\n\r\n        contextProps.setSquares(localSquares)\r\n        contextProps.onTurn = false\r\n        \r\n        contextProps.conn.send(localSquares)\r\n        /* console.log(\"L\", localSquares)\r\n        console.log(\"CP\", contextProps.squares) */\r\n        forceUpdate(update + 1)\r\n    }\r\n  }\r\n\r\n  function nextTurn() {\r\n    if(winner) {\r\n      contextProps.setSquares(Array(9).fill(null))\r\n      navigate(\"/TicTacToe/game/rematch/\" + winner);\r\n    }\r\n    else if(!contextProps.squares.includes(null)) {\r\n      contextProps.setSquares(Array(9).fill(null))\r\n      navigate(\"/TicTacToe/game/rematch/draw\")\r\n    }\r\n    return contextProps.onTurn ? \"Your turn\" : \"Opponent's turn\"\r\n  }\r\n\r\n  return (\r\n    <div className=\"setScreenSize\">\r\n      <div className=\"centerDivElement text-5xl\">\r\n        <p>{nextTurn()}</p>\r\n      </div>\r\n\r\n      <div className=\"centerDivElement boardDiv\">\r\n        <div className=\"board grid grid-rows-3 grid-cols-3\">\r\n          <Board squares={contextProps.squares} handleClick={handleClick} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OGame;\r\n","import React, { useContext } from \"react\";\r\nimport { PeerContext } from \"..//PeerInfo/PeerInfo\";\r\nimport { \r\n    useNavigate, \r\n    useParams \r\n} from \"react-router-dom\";\r\nimport \"../../index.css\";\r\n\r\nfunction Rematch() {\r\n    const navigate = useNavigate();\r\n    const contextProps = useContext(PeerContext)\r\n\r\n    function WhoWon() {\r\n        const { winner } = useParams()\r\n    \r\n        if (winner !== \"draw\") {\r\n            return winner + \" won the game!\"\r\n        }\r\n        else {\r\n            return \"Draw!\"\r\n        }\r\n    }\r\n\r\n    function home() {\r\n        navigate(\"/TicTacToe\")\r\n    }\r\n    \r\n    function restart() {\r\n        console.log(contextProps)\r\n        if (!contextProps.conn) {\r\n            navigate(\"/TicTacToe/localGame\")\r\n        }\r\n        navigate(\"/TicTacToe/onlineGame\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"centerDivElementCol min-h-screen\">\r\n            <div>\r\n                <p className=\"text-5xl\">{WhoWon()}</p>\r\n            </div>\r\n            <div>\r\n                <button className=\"button marginTopPlus\" onClick={() => home()}>Menu</button>\r\n                <button className=\"button marginTopPlus\" onClick={() => restart()}>Restart</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rematch","import React from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\n\r\nimport TitleScreen from \"./TitleScreen/TitleScreen\";\r\nimport WaitingRoom from \"./WaitingRoom/WaitingRoom\";\r\nimport LGame from \"./Game/LocalGame\";\r\nimport OGame from \"./Game/OnlineGame\";\r\nimport Rematch from \"./Rematch/Rematch\";\r\n\r\n\r\nfunction Router() {\r\n  return(\r\n      <Routes>\r\n        <Route exact path=\"/TicTacToe\" element={<TitleScreen />} /> {/* <TitleScreen /> */}\r\n        <Route exact path=\"/TicTacToe/wait\" element={<WaitingRoom />} /> {/* <WaitingRoom /> */}\r\n        <Route exact path=\"/TicTacToe/localGame\" element={<LGame />} />\r\n        <Route exact path=\"/TicTacToe/onlineGame\" element={<OGame />} />\r\n        <Route path=\"/TicTacToe/game/rematch/:winner\" element={<Rematch />} />\r\n      </Routes>\r\n  )\r\n}\r\n\r\nexport default Router","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Router from './pages/Router';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport PeerProvider from \"./pages/PeerInfo/PeerInfo\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter> {/* <HashRouter basename=\"/TicTacToe\"> */}\n      <PeerProvider>\n          <Router />\n      </PeerProvider>\n    </BrowserRouter>\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}