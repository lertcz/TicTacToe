{"version":3,"sources":["pages/TitleScreen/TitleScreen.jsx","pages/WaitingRoom/WaitingRoom.jsx","components/Square/Square.jsx","components/Board/Board.jsx","pages/Game/Game.jsx","pages/Rematch/Rematch.jsx","pages/Router.jsx","reportWebVitals.js","index.js"],"names":["TitleScreen","navigate","useNavigate","className","onClick","console","log","placeholder","size","WaitingRoom","Square","props","handleClick","index","value","Board","squares","map","square","i","Game","useState","Xturn","setXturn","Array","fill","setSquares","winner","lines","length","a","b","c","calculateWinner","includes","setTitle","localSquares","Rematch","Router","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAkCeA,MA9Bf,WACI,IAAMC,EAAWC,cAWjB,OACI,sBAAKC,UAAU,gCAAf,UACI,8BACI,mBAAGA,UAAU,WAAb,yBAEJ,8BACI,wBAAQA,UAAU,SAASC,QAfvC,WACIC,QAAQC,IAAI,wBACZL,EAAS,oBAaD,2BAEJ,8BACI,uBAAOE,UAAU,YAAYI,YAAY,UAAUC,KAAK,SAE5D,8BACI,wBAAQL,UAAU,SAASC,QAhBvC,aAgBY,6BCRDK,MAhBf,WACI,IAAMR,EAAWC,cAEjB,OACI,sBAAKC,UAAU,gCAAf,UACI,8BACI,mBAAGA,UAAU,WAAb,4CAEJ,gCACI,wBAAQA,UAAU,uBAAuBC,QAAS,kBAAMH,EAAS,eAAjE,kBACA,wBAAQE,UAAU,uBAAuBC,QAAS,kBAAMH,EAAS,oBAAjE,8B,OCJDS,MARf,SAAgBC,GACZ,OACI,wBAAQP,QAAS,kBAAMO,EAAMC,YAAYD,EAAME,QAA/C,SACKF,EAAMG,SCIJC,MAPf,SAAeJ,GAEX,OACIA,EAAMK,QAAQC,KAAI,SAACC,EAAQC,GAAT,OAAe,cAAC,EAAD,CAAgBN,MAAOM,EAAGL,MAAOI,EAAQN,YAAaD,EAAMC,aAA/CO,OC6DvCC,MA7Df,WACE,IAAMnB,EAAWC,cAEjB,EAA0BmB,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAASG,MAAM,GAAGC,KAAK,OAArD,mBAAOT,EAAP,KAAgBU,EAAhB,KACMC,EAEN,SAAyBX,GAYvB,IAXA,IAAMY,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGAT,EAAI,EAAGA,EAAIS,EAAMC,OAAQV,IAAK,CACrC,kBAAkBS,EAAMT,GAAxB,GAAOW,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIhB,EAAQc,IAAMd,EAAQc,KAAOd,EAAQe,IAAMf,EAAQc,KAAOd,EAAQgB,GACpE,OAAOhB,EAAQc,GAGnB,OAAO,EApBMG,CAAgBjB,GA+C/B,OACI,sBAAKb,UAAU,qDAAf,UACE,qBAAKA,UAAU,8BAAf,SAA6C,4BAbnD,WACE,GAAGwB,EAED1B,EAAS,0CAEN,IAAIe,EAAQkB,SAAS,MACxB,MAAO,QAET,OAAOZ,EAAQ,WAAa,WAKyBa,OACjD,cAAC,EAAD,CAAOnB,QAASA,EAASJ,YA3B/B,SAAqBO,GACnB,IAAGQ,GAGmB,MAAdX,EAAQG,GAAY,CAC1B,IAAIiB,EAAepB,EACnBoB,EAAajB,GAAKG,EAAQ,IAAM,IAChCI,EAAWU,GACXb,GAAUD,WCrBDe,MAhBf,WACI,IAAMpC,EAAWC,cAEjB,OACI,sBAAKC,UAAU,gCAAf,UACI,8BACI,mBAAGA,UAAU,WAAb,4CAEJ,gCACI,wBAAQA,UAAU,uBAAuBC,QAAS,kBAAMH,EAAS,eAAjE,kBACA,wBAAQE,UAAU,uBAAuBC,QAAS,kBAAMH,EAAS,oBAAjE,4BCKDqC,MAXf,WACI,OACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,QAAS,cAAC,EAAD,MAD1C,IAEE,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,kBAAkBC,QAAS,cAAC,EAAD,MAC7C,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,kBAAkBC,QAAS,cAAC,EAAD,MAC7C,cAAC,IAAD,CAAOD,KAAK,kCAAkCC,QAAS,cAAC,EAAD,UCFlDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCGdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,eACI,cAAC,EAAD,SAINC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.5ee2a536.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../index.css\";\r\n\r\nfunction TitleScreen() {\r\n    const navigate = useNavigate();\r\n\r\n    function createGame() {\r\n        console.log(\"navigate to game now\");\r\n        navigate(\"/TicTacToe/wait\")\r\n    }\r\n\r\n    function joinGame() {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"centerDivElement min-h-screen\">\r\n            <div>\r\n                <p className=\"text-5xl\">TicTacToe</p>\r\n            </div>\r\n            <div>\r\n                <button className=\"button\" onClick={createGame}>Create Game</button>\r\n            </div>\r\n            <div>\r\n                <input className=\"textField\" placeholder=\"Room ID\" size=\"16\"></input>\r\n            </div>\r\n            <div>\r\n                <button className=\"button\" onClick={joinGame}>Join Game</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitleScreen","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../index.css\";\r\n\r\nfunction WaitingRoom() {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div className=\"centerDivElement min-h-screen\">\r\n            <div>\r\n                <p className=\"text-5xl\">Waiting for the opponent ...</p>\r\n            </div>\r\n            <div>\r\n                <button className=\"button marginTopPlus\" onClick={() => navigate(\"/TicTacToe\")}>Back</button>\r\n                <button className=\"button marginTopPlus\" onClick={() => navigate(\"/TicTacToe/game\")}>Load Game</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WaitingRoom","import React from \"react\";\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button onClick={() => props.handleClick(props.index)}>\r\n            {props.value}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Square","import Square from \"../Square/Square\"\r\n\r\nfunction Board(props) {\r\n    //squares[1] = \"X\"\r\n    return (\r\n        props.squares.map((square, i) => <Square key={i} index={i} value={square} handleClick={props.handleClick}></Square>) // onClick={() => props.onClick(i)}\r\n    )\r\n}\r\n\r\nexport default Board","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Board from \"../../components/Board/Board\"\r\nimport \"../../index.css\";\r\n\r\nfunction Game() {\r\n  const navigate = useNavigate();\r\n\r\n  const [Xturn, setXturn] = useState(true)\r\n  const [squares, setSquares] = useState(Array(9).fill(null))\r\n  const winner = calculateWinner(squares)\r\n\r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function handleClick(i) {\r\n    if(winner) {\r\n      return // title screen TODO\r\n    }\r\n    else if(squares[i] == null) {\r\n      let localSquares = squares\r\n      localSquares[i] = Xturn ? \"X\" : \"O\"\r\n      setSquares(localSquares)\r\n      setXturn(!Xturn)\r\n\r\n    }\r\n  }\r\n\r\n  function setTitle() {\r\n    if(winner) {\r\n      //return winner + \" won the game!\"\r\n      navigate(\"/TicTacToe/game/rematch/${winner}\");\r\n    }\r\n    else if(!squares.includes(null)) {\r\n      return \"Draw!\"\r\n    }\r\n    return Xturn ? \"X's turn\" : \"O's turn\"\r\n  }\r\n\r\n  return (\r\n      <div className=\"grid grid-cols-3 grid-rows-4 min-h-screen text-5xl\">\r\n        <div className=\"centerDivElement col-span-3\"><p>{setTitle()}</p></div>\r\n        <Board squares={squares} handleClick={handleClick} />\r\n\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../index.css\";\r\n\r\nfunction Rematch() {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div className=\"centerDivElement min-h-screen\">\r\n            <div>\r\n                <p className=\"text-5xl\">Waiting for the opponent ...</p>\r\n            </div>\r\n            <div>\r\n                <button className=\"button marginTopPlus\" onClick={() => navigate(\"/TicTacToe\")}>Menu</button>\r\n                <button className=\"button marginTopPlus\" onClick={() => navigate(\"/TicTacToe/game\")}>Restart</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rematch","import React from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\n\r\nimport TitleScreen from \"./TitleScreen/TitleScreen\";\r\nimport WaitingRoom from \"./WaitingRoom/WaitingRoom\";\r\nimport Game from \"./Game/Game\";\r\nimport Rematch from \"./Rematch/Rematch\";\r\n\r\nfunction Router() {\r\n    return(\r\n        <Routes>\r\n          <Route exact path=\"/TicTacToe\" element={<TitleScreen />} /> {/* /TicTacToe  etc.*/}\r\n          <Route exact path=\"/TicTacToe/wait\" element={<WaitingRoom />} />\r\n          <Route exact path=\"/TicTacToe/game\" element={<Game />} />\r\n          <Route path=\"/TicTacToe/game/rematch/:winner\" element={<Rematch />} />\r\n        </Routes>\r\n    )\r\n}\r\n\r\nexport default Router","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import Game from './pages/Game/Game'\nimport Router from './pages/Router';\n//import TitleScreen from './pages/TitleScreen/TitleScreen';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\"; // HashRouter\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter> {/* <HashRouter basename=\"/TicTacToe\"> */}\n        <Router />\n    </BrowserRouter>\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}